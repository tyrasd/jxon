/*
 * JXON framework - Copyleft 2011 by Mozilla Developer Network
 *
 * Revision #1 - September 5, 2014
 *
 * https://developer.mozilla.org/en-US/docs/JXON
 *
 * This framework is released under the GNU Public License, version 3 or later.
 * http://www.gnu.org/licenses/gpl-3.0-standalone.html
 *
 * small modifications performed by the iD project:
 * https://github.com/openstreetmap/iD/commits/18aa33ba97b52cacf454e95c65d154000e052a1f/js/lib/jxon.js
 *
 * small modifications performed by user @bugreport0
 * https://github.com/tyrasd/JXON/pull/2/commits
 *
 * some additions and modifications by user @igord
 * https://github.com/tyrasd/JXON/pull/5/commits
 *
 * bugfixes and code cleanup by user @laubstein
 * https://github.com/tyrasd/jxon/pull/32
 *
 * adapted for nodejs and npm by @tyrasd (Martin Raifer <tyr.asd@gmail.com>)
 */
(function(e,t){if(typeof define==="function"&&define.amd){
// AMD. Register as an anonymous module.
define([],t(window))}else if(typeof exports==="object"){if(typeof window==="object"&&window.DOMImplementation){
// Browserify. hardcode usage of browser's own XMLDom implementation
// see https://github.com/tyrasd/jxon/issues/18
module.exports=t(window)}else{
// Node. Does not work with strict CommonJS, but
// only CommonJS-like environments that support module.exports,
// like Node.
module.exports=t(require("xmldom"),true)}}else{
// Browser globals (root is window)
e.JXON=t(window)}})(this,function(e,t){var r={valueKey:"_",attrKey:"$",attrPrefix:"$",lowerCaseTags:false,trueIsEmpty:false,autoDate:false,ignorePrefixedNodes:false,parseValues:false,forceXmlProlog:false,defaultXmlProlog:'<?xml version="1.0" encoding="UTF-8"?>'};var n=[];var i=/^\s*$/;var o=/^(?:true|false)$/i;var a=/^(<\?xml.*?\?>[\n]?)/;var l=/\b(version|encoding|standalone)="([^"]+?)"/g;var s={};var f;return new function(){this.config=function(t){for(var n in t){r[n]=t[n]}if(r.parserErrorHandler){f=new e.DOMParser({errorHandler:r.parserErrorHandler,locator:{}})}};/**
     * Helper function: given a xml prolog (eg: <?xml version="1.0"?>),
     * returns a object (eg: { version: "1.0" }).
     */
function u(e){var t=e.match(l);var r={};for(var n=0;n<t.length;n++){var i=t[n].split("=");r[i[0]]=i[1].replace(/["]/g,"")}return r}/**
     * Helper function: given an object representing a xml prolog (eg: { version: "1.0", encoding: "UTF-8", standalone: "true" }),
     * returns a string (eg: <?xml version="1.0" encoding="UTF-8" standalone="true"?>).
     */
function c(e){var t=[];for(var r in e){if(e.hasOwnProperty(r)){t.push(r+'="'+e[r]+'"')}}return t.length?"<?xml "+t.join(" ")+"?>":""}/**
     * Helper function: check for empty object
     */
function d(e){for(var t in e){if(e.hasOwnProperty(t)){return false}}return true&&JSON.stringify(e)===JSON.stringify({})}/**
     * Helper function: clone a object
     */
function m(e){return JSON.parse(JSON.stringify(e))}function p(e){if(!r.parseValues){return e}if(i.test(e)){return null}if(o.test(e)){return e.toLowerCase()==="true"}if(isFinite(e)){return parseFloat(e)}if(r.autoDate&&isFinite(Date.parse(e))){return new Date(e)}return e}function h(){}h.prototype.toString=function(){return"null"};h.prototype.valueOf=function(){return null};function g(e){return e===null?new h:e instanceof Object?e:new e.constructor(e)}function v(e,t,i,o){var a=4,l=3,s=1,f=n.length,u=e.hasChildNodes(),c=e.nodeType===e.ELEMENT_NODE&&e.hasAttributes(),d=Boolean(t&2),m=0,h="",x=d?{}:/* put here the default value for empty nodes: */r.trueIsEmpty?true:"",y,w;if(u){for(var T,P=0;P<e.childNodes.length;P++){T=e.childNodes.item(P);if(T.nodeType===a){h+=T.nodeValue}else if(T.nodeType===l){h+=T.nodeValue.trim()}else if(T.nodeType===s&&!(r.ignorePrefixedNodes&&T.prefix)){n.push(T)}}}var S=n.length,N=p(h);if(!d&&(u||c)){x=t===0?g(N):{}}for(var O=f;O<S;O++){y=n[O].nodeName;if(r.lowerCaseTags){y=y.toLowerCase()}w=v(n[O],t,i,o);if(x.hasOwnProperty(y)){if(x[y].constructor!==Array){x[y]=[x[y]]}x[y].push(w)}else{x[y]=w;m++}}if(c){var b=e.attributes.length,E=o?"":r.attrPrefix,C=o?{}:x;for(var D,X,j=0;j<b;m++,j++){D=e.attributes.item(j);X=D.name;if(r.lowerCaseTags){X=X.toLowerCase()}C[E+X]=p(D.value.trim())}if(o){if(i){Object.freeze(C)}x[r.attrKey]=C;m-=b-1}}if(t===3||(t===2||t===1&&m>0)&&h){x[r.valueKey]=N}else if(!d&&m===0&&h){x=N}if(i&&(d||m>0)){Object.freeze(x)}n.length=f;return x}function x(e,n,i){var o,a,l;if(i.constructor===String||i.constructor===Number||i.constructor===Boolean){n.appendChild(e.createTextNode(i.toString()));/* verbosity level is 0 or 1 */
if(i===i.valueOf()){return}}else if(i.constructor===Date){n.appendChild(e.createTextNode(i.toISOString()))}for(var f in i){o=i[f];if(o===null){o={}}if(isFinite(f)||o instanceof Function){continue}/* verbosity level is 0 */
if(f===r.valueKey){if(o!==null&&o!==true){n.appendChild(e.createTextNode(o.constructor===Date?o.toISOString():String(o)))}}else if(f===r.attrKey){/* verbosity level is 3 */
for(var u in o){n.setAttribute(u,o[u])}}else if(f===r.attrPrefix+"xmlns"){if(t){n.setAttribute(f.slice(1),o)}}else if(f===r.attrPrefix+"xmlProlog"){
// store xmlProlog
if(o){s=m(o)}}else if(f.charAt(0)===r.attrPrefix){n.setAttribute(f.slice(1),o)}else if(o.constructor===Array){for(var c in o){l=o[c]&&o[c][r.attrPrefix+"xmlns"]||n.namespaceURI;if(l){a=e.createElementNS(l,f)}else{a=e.createElement(f)}x(e,a,o[c]||{});n.appendChild(a)}}else{l=(o||{})[r.attrPrefix+"xmlns"]||n.namespaceURI;if(l){a=e.createElementNS(l,f)}else{a=e.createElement(f)}if(o instanceof Object){x(e,a,o)}else if(o!==null&&o!==true){a.appendChild(e.createTextNode(o.toString()))}else if(!r.trueIsEmpty&&o===true){a.appendChild(e.createTextNode(o.toString()))}n.appendChild(a)}}}this.xmlToJs=this.build=function(e,t,n,i){var o=arguments.length>1&&typeof t==="number"?t&3:/* put here the default verbosity level: */1;var a=v(e,o,n||false,arguments.length>3?i:o===3);if(!d(s)){a[r.attrPrefix+"xmlProlog"]=m(s);s={}}return a};this.jsToXml=this.unbuild=function(t,r,n,i){var o=e.document&&e.document.implementation||new e.DOMImplementation;var a=o.createDocument(r||null,n||"",i||null);x(a,a.documentElement||a,t);return a};this.stringToXml=function(t){if(!f){f=new e.DOMParser}if(a.test(t)){s=u(t.match(a)[0])}return f.parseFromString(t,"application/xml")};this.xmlToString=function(t){var n="";if(typeof t.xml!=="undefined"){n=t.xml}else{n=(new e.XMLSerializer).serializeToString(t)}
// if the original string has a prolog or forceXmlProlog option is true, we include a new one or replace the existent
if(!d(s)||r.forceXmlProlog){if(a.test(n)){
// replace the prolog
n=n.replace(a,c(s)||r.defaultXmlProlog)}else{n=(c(s)||r.defaultXmlProlog)+n}}return n};this.stringToJs=function(e){var t=this.stringToXml(e);return this.xmlToJs(t)};this.jsToString=this.stringify=function(e,t,r,n){return this.xmlToString(this.jsToXml(e,t,r,n))};this.each=function(e,t,r){if(e instanceof Array){e.forEach(t,r)}else{[e].forEach(t,r)}}}});